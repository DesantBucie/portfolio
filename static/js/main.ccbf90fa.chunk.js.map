{"version":3,"sources":["logo.svg","components/Header.js","components/AboutMe.js","components/media/korny.png","components/media/paleofetch.gif","components/media/easy-vim.gif","components/media/antila.png","components/MyProjects.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","undefined","width","setWidth","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","sleep","ms","Promise","resolve","setTimeout","Darkmode","document","body","classList","toggle","OpenSidebar","a","getElementById","style","display","CloseSidebar","transition","className","Grid","container","direction","justifyContent","alignItems","src","logo","alt","Button","onClick","color","href","variant","backgroundColor","id","fontSize","AboutMe","xmlns","viewBox","preserveAspectRatio","d","MyProjects","spacing","item","sm","md","korny","paleofetch","easy_vim","antila","Contact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Apollo","StrictMode","ReactDOM","render"],"mappings":"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","file":"static/js/main.ccbf90fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7e8086fc.svg\";","import logo from '../../src/logo.svg';\n\nimport Button from '@material-ui/core/Button';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport \"./Header.scss\";\nimport React, { useEffect, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst Header = (props) => {\n\n    const [width, setWidth] = useState(undefined);\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n        }\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n    const sleep = (ms) => {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n    const Darkmode = () => {\n        document.body.classList.toggle('darkmode');\n    }\n    const OpenSidebar = async () => {\n        document.getElementById(\"header__sidenav\").style.display = 'block';\n        await sleep(20);\n        document.getElementById(\"header__sidenav\").style.width = '300px';\n    }\n    const CloseSidebar = async () => {\n        document.getElementById(\"header__sidenav\").style.width = '0';\n        document.getElementById(\"header__sidenav\").style.transition = '0.5s';\n        await sleep(500);\n        document.getElementById(\"header__sidenav\").style.display = 'none';\n\n    }\n    if (width > 750) {\n\n        return (\n            <div className=\"header\">\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <section className=\"header__logo\"><img src={logo} alt=\"logo\" /></section>\n                    <div>\n                        <Button onClick={Darkmode} color=\"primary\"><Brightness4Icon /></Button>\n                    </div>\n                    <div><a href=\"#about-me\">\n                        <Button variant=\"contained\" color=\"primary\">About me</Button>\n                    </a></div>\n                    <div><a href=\"#my-projects\">\n                        <Button variant=\"contained\" color=\"primary\">My projects</Button>\n                    </a></div>\n                    <div><a href=\"#contact\">\n                        <Button style={{ backgroundColor: \"#21b6ae\", }} variant=\"contained\">Contact</Button>\n                    </a></div>\n                </Grid>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div className=\"header\">\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <section className=\"header__logo\">\n                        <img src={logo} alt=\"logo\" />\n                    </section>\n                    <div><Button onClick={Darkmode} color=\"primary\"><Brightness4Icon /></Button></div>\n                    <div><Button onClick={OpenSidebar} style={{ backgroundColor: \"#21b6ae\", }} variant=\"contained\"><MenuIcon /></Button></div>\n                    <div id=\"header__sidenav\" className=\"header__sidenav\">\n                        <Button onClick={CloseSidebar}><CloseIcon style={{ fontSize: \"3em\" }} /></Button>\n                        <a href=\"#about-me\" onClick={CloseSidebar}>\n                            <Button variant=\"contained\" color=\"primary\">About me</Button>\n                        </a>\n                        <a href=\"#my-projects\" onClick={CloseSidebar}>\n                            <Button variant=\"contained\" color=\"primary\">My projects</Button>\n                        </a>\n                        <a href=\"#contact\" onClick={CloseSidebar}>\n                            <Button color=\"primary\" variant=\"contained\">Contact</Button>\n                        </a>\n                    </div>\n                </Grid>\n            </div>\n        );\n    }\n}\nexport default Header;","import './AboutMe.scss';\n\nconst AboutMe = () => {\n    return (\n        <div>\n            <div className=\"about-me__tilt\">\n                    <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                        <path d=\"M1200 120L0 16.48 0 0 1200 0 1200 120z\" className=\"about-me__shape-fill\"></path>\n                    </svg>\n                </div>\n        <div className=\"about-me\" id=\"about-me\">\n            <h1>Hello, I'm Jakub</h1>\n\n            <h2>I'm aspiring programmer intrested in low level programming and motorsports.</h2>\n\n            <a href=\"https://github.com/DesantBucie\">\n                <img \n                src=\"https://github-readme-stats.vercel.app/api?username=DesantBucie&theme=outrun&count_private=true&include_all_commits=true\"\n                alt=\"github stats\"/>\n            </a>\n            <h3>Check out my projects below! I hope you find them somehow useful. </h3>\n        </div>\n        </div>\n    );\n}\nexport default AboutMe;","export default __webpack_public_path__ + \"static/media/korny.ba9044e4.png\";","export default __webpack_public_path__ + \"static/media/paleofetch.54e7b603.gif\";","export default __webpack_public_path__ + \"static/media/easy-vim.37885f40.gif\";","export default __webpack_public_path__ + \"static/media/antila.c3b70bf0.png\";","import Grid from '@material-ui/core/Grid';\n\nimport korny from './media/korny.png';\nimport paleofetch from './media/paleofetch.gif';\nimport easy_vim from './media/easy-vim.gif'\nimport antila from './media/antila.png'\n\nimport './MyProjects.scss';\n\nconst MyProjects = () => {\n    \n    return (\n        <div>\n            <div className=\"my-projects__triangle\">\n                <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                    <path d=\"M1200 120L0 16.48 0 0 1200 0 1200 120z\" className=\"my-projects__shape-fill\"></path>\n                </svg>\n            </div>\n            <div className=\"my-projects\" id=\"my-projects\">\n            <h2>My projects</h2>\n            <section className=\"my-projects__project\">\n            <Grid\n        \n            container\n            spacing={4}\n            justifyContent=\"center\"\n            alignItems=\"center\">\n                <Grid container item sm={12} md={6}>\n                    <h3><a href=\"https://github.com/DesantBucie/korny\">Korny</a></h3> \n                    <p>\n                        is plugin simplifying use of ksh93, and I think it is my most useful project. It makes easier to make new prompts with good performance, it has git branch prompting built in and long and short pwd prompting. Also I think it has only `autocd` solution for kornshell that was made by <a href=\"https://github.com/MCDutchie\">MCDutchie</a> after I asked him for a solution. It works on many systems (including OpenBSD where tput command needs three arguments instead of one)  \n                    </p>\n                </Grid>\n                <Grid container item sm={12} md={6}>\n                    <div className=\"my-projects__image\"><img src={korny} alt=\"korny\"/></div>\n                </Grid>\n            </Grid>\n            </section>\n            <section className=\"my-projects__project\">\n            <Grid \n           \n            container\n            spacing={4}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"row-reverse\">\n                <Grid container item sm={12} md={6}>\n                    <h3><a href=\"https://gitlab.com/DesantBucie/paleofetch-mac\">Paleofetch</a></h3> \n                    <p>\n                        is a fork of a copy of neofetch written in C. Currently works only on mac, I'll try to bring it on the BSDs and Solaris family. It is on macOS even <b>20 times faster</b> than neofetch. Most of code is new.\n                    </p>\n                </Grid>\n                <Grid container item sm={12} md={6}>\n                    <div className=\"my-projects__image\"><img src={paleofetch} alt=\"paleofetch\"/></div>\n                </Grid>\n            </Grid>\n            </section>\n            <section className=\"my-projects__project\">\n            <Grid \n            \n            container\n            spacing={4}\n            justifyContent=\"center\"\n            alignItems=\"center\">\n                <Grid container item sm={12} md={6}>\n                    <h3><a href=\"https://github.com/DesantBucie/easy-vim\">Easy-Vim</a></h3> \n                    <p>\n                        is currently just a prototype and concept of what I would like achieve, that is, easy to set and use vim completion almost or completly without additional dependecies. If you want something already working then use <a href=\"https://github.com/DesantBucie/Verde\">Verde</a> (It works very well with macvim.) or <a href=\"https://github.com/DesantBucie/exrc\">Exrc</a> for vi.\n                    </p>\n                </Grid>\n                <Grid container item sm={12} md={6}>\n                    <div className=\"my-projects__image\"><img src={easy_vim} alt=\"EasyVim\"/></div>\n                </Grid>\n            </Grid>\n            </section>\n            <section className=\"my-projects__project\">\n            <Grid \n            \n            container\n            spacing={4}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            direction=\"row-reverse\">\n                <Grid container item sm={12} md={6}>\n                    <h3><a href=\"https://github.com/DesantBucie/aquila\">Aquila</a></h3> \n                    <p>\n                        is old learning project, that is quite abandoned that I'm sure has many mistakes, and outdates, but it's example of me working with data from api.\n                    </p>\n                </Grid>\n                <Grid container item sm={12} md={6}>\n                    <div className=\"my-projects__image\"><img src={antila} alt=\"antila\"/></div>\n                </Grid>\n\n            </Grid>\n            </section>\n        </div>\n        </div>\n    );\n}\nexport default MyProjects;","import './Contact.scss';\n\nconst Contact = () => {\n    return (\n    <div>\n        <div className=\"contact__triangle\">\n            <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                <path d=\"M1200 0L0 0 892.25 114.72 1200 0z\" className=\"contact__shape-fill\"></path>\n            </svg>\n        </div>\n        <div className=\"contact\" id=\"contact\">\n            <h2>Contact</h2>\n            <section className=\"contact__container\">\n                <h3>Mail Me! <a href = \"mailto: mattrusz@gmail.com\">mattrusz@gmail.com</a></h3>\n                <h3>Or <a href = \"https://github.com/DesantBucie/DesantBucie/issues\">Make an issue</a> in my github repo</h3>\n            </section>\n            \n\n        </div>\n        <div className=\"contact__triangle contact__triangle--bottom\">\n            <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                <path d=\"M1200 0L0 0 892.25 114.72 1200 0z\" className=\"contact__shape-fill\"></path>\n            </svg>\n        </div>\n    </div>\n    );\n}\nexport default Contact;","import './App.scss';\nimport Header from './components/Header';\nimport AboutMe from './components/AboutMe';\nimport MyProjects from'./components/MyProjects';\nimport Contact from './components/Contact';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Header />\n      <AboutMe />\n      <MyProjects />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst Apollo = <React.StrictMode><App /></React.StrictMode>\nReactDOM.render(\n  \n  Apollo,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}