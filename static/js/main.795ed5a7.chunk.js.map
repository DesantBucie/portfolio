{"version":3,"sources":["logo.svg","components/nav/MobileNav.js","components/nav/WideNav.js","components/Header.js","components/AboutMe.js","components/media/korny.png","components/media/paleofetch.gif","components/media/easy-vim.gif","components/media/antila.png","components/MyProjects.js","components/Contact.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["MobileNav","OpenSidebar","a","document","getElementById","style","width","CloseSidebar","className","Button","onClick","backgroundColor","variant","id","fontSize","href","color","WideNav","Header","useState","window","innerWidth","setWidth","body","classList","contains","icon","setIcon","Darkmode","toggle","useEffect","handleResize","addEventListener","removeEventListener","Grid","container","direction","justifyContent","alignItems","src","logo","alt","AboutMe","xmlns","viewBox","preserveAspectRatio","d","MyProjects","spacing","item","sm","md","korny","paleofetch","easy_vim","antila","Contact","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Apollo","StrictMode","ReactDOM","render","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.795ed5a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7e8086fc.svg\";","import MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\n\nimport './Bothnav.scss';\n\nconst MobileNav = () => {\n    const OpenSidebar = async () => {\n        document.getElementById(\"nav__sidenav\").style.width = '300px';\n    }\n    const CloseSidebar = async () => {\n        document.getElementById(\"nav__sidenav\").style.width = '0';\n    }\n    return (\n                <nav className=\"nav\">\n                    <div>\n                        <Button onClick={OpenSidebar} style={{ backgroundColor: \"#21b6ae\", }} variant=\"contained\"><MenuIcon /></Button>\n                    </div>\n                    <div id=\"nav__sidenav\" className=\"nav__sidenav\">\n                        <Button onClick={CloseSidebar}><CloseIcon style={{ fontSize: \"3em\" }} /></Button>\n                        <a href=\"#about-me\" onClick={CloseSidebar}>\n                            <Button variant=\"contained\" color=\"primary\">About me</Button>\n                        </a>\n                        <a href=\"#my-projects\" onClick={CloseSidebar}>\n                            <Button variant=\"contained\" color=\"primary\">My projects</Button>\n                        </a>\n                        <a href=\"#contact\" onClick={CloseSidebar}>\n                            <Button color=\"primary\" variant=\"contained\">Contact</Button>\n                        </a>\n                    </div>\n                </nav>\n    );\n};\nexport default MobileNav;","import Button from '@material-ui/core/Button';\n\nimport './Bothnav.scss';\nconst WideNav = () => {\n    return (\n        <nav className=\"nav\">\n            <div><a href=\"#about-me\">\n                <Button variant=\"contained\" color=\"primary\">About me</Button>\n            </a></div>\n            <div><a href=\"#my-projects\">\n                <Button variant=\"contained\" color=\"primary\">My projects</Button>\n            </a></div>\n            <div><a href=\"#contact\">\n                <Button style={{ backgroundColor: \"#21b6ae\", }} variant=\"contained\">Contact</Button>\n            </a></div>\n        </nav>\n    );\n};\nexport default WideNav;","import './Header.scss';\nimport logo from '../logo.svg';\nimport Grid from '@material-ui/core/Grid';\nimport React, { useEffect, useState } from 'react';\n\nimport MobileNav from './nav/MobileNav';\nimport WideNav from './nav/WideNav';\nimport Button from '@material-ui/core/Button';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\n\nconst Header = () => {\n\n    const [width, setWidth] = useState(window.innerWidth);\n    const [icon, setIcon] = useState(document.body.classList.contains(\"darkmode\"));\n    \n    const Darkmode = () => {\n        document.body.classList.toggle('darkmode');\n        if (document.body.classList.contains('darkmode')) {\n            setIcon(true);\n        }\n        else {\n            setIcon(false);\n        }\n    }\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n        }\n        window.addEventListener(\"resize\", handleResize);\n        handleResize();\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, [width]);\n\n    if (width > 750) {\n        return (\n            <header className=\"header\">\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <div className=\"header__logo\">\n                        <img src={logo} alt=\"logo\" />\n                    </div>\n                    <div>\n                        <Button onClick={Darkmode} color=\"primary\">\n                            {icon ? <Brightness7Icon /> : <Brightness4Icon/> }\n                        </Button>\n                    </div>\n                    <WideNav />\n                </Grid>\n            </header>\n        );\n    }\n    else {\n        return (\n            <header className=\"header\">\n                <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <div className=\"header__logo\">\n                        <img src={logo} alt=\"logo\" />\n                    </div>\n                    <div>\n                        <Button onClick={Darkmode} color=\"primary\">\n                            {icon ? <Brightness7Icon /> : <Brightness4Icon/> }\n                        </Button>\n                    </div>\n                    <MobileNav />\n                </Grid>\n            </header>\n        );\n    }\n}\nexport default Header;","import './AboutMe.scss';\n\nconst AboutMe = () => {\n    return (\n        <div>\n            <div className=\"about-me__tilt\">\n                    <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                        <path d=\"M1200 120L0 16.48 0 0 1200 0 1200 120z\" className=\"about-me__shape-fill\"></path>\n                    </svg>\n                </div>\n        <section className=\"about-me\" id=\"about-me\">\n            <h1>Hello, I'm Jakub</h1>\n\n            <h2>I'm aspiring programmer intrested in low level programming and motorsports.</h2>\n\n            <a href=\"https://github.com/DesantBucie\">\n                <img \n                src=\"https://github-readme-stats.vercel.app/api?username=DesantBucie&theme=outrun&count_private=true&include_all_commits=true\"\n                alt=\"github stats\"/>\n            </a>\n            <h3>Check out my projects below! I hope you find them somehow useful. </h3>\n        </section>\n        </div>\n    );\n}\nexport default AboutMe;","export default __webpack_public_path__ + \"static/media/korny.ba9044e4.png\";","export default __webpack_public_path__ + \"static/media/paleofetch.54e7b603.gif\";","export default __webpack_public_path__ + \"static/media/easy-vim.37885f40.gif\";","export default __webpack_public_path__ + \"static/media/antila.c3b70bf0.png\";","import Grid from '@material-ui/core/Grid';\n\nimport korny from './media/korny.png';\nimport paleofetch from './media/paleofetch.gif';\nimport easy_vim from './media/easy-vim.gif'\nimport antila from './media/antila.png'\n\nimport './MyProjects.scss';\n\nconst MyProjects = () => {\n\n    return (\n        <div>\n            <div className=\"my-projects__triangle\">\n                <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                    <path d=\"M1200 120L0 16.48 0 0 1200 0 1200 120z\" className=\"my-projects__shape-fill\"></path>\n                </svg>\n            </div>\n            <section className=\"my-projects\" id=\"my-projects\">\n                <h2>My projects</h2>\n                <div className=\"my-projects__project\">\n                    <Grid\n                        container\n                        spacing={4}\n                        justifyContent=\"center\"\n                        alignItems=\"center\">\n                        <Grid container item sm={12} md={6}>\n                            <h3><a href=\"https://github.com/DesantBucie/korny\">Korny</a></h3>\n                            <p>\n                                is plugin simplifying use of ksh93, and I think it is my most useful project. It makes easier to make new prompts with good performance, it has git branch prompting built in and long and short pwd prompting. Also I think it has only `autocd` solution for kornshell that was made by <a href=\"https://github.com/MCDutchie\">MCDutchie</a> after I asked him for a solution. It works on many systems (including OpenBSD where tput command needs three arguments instead of one)\n                            </p>\n                        </Grid>\n                        <Grid container item sm={12} md={6}>\n                            <div className=\"my-projects__image\"><img src={korny} alt=\"korny\" /></div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className=\"my-projects__project\">\n                    <Grid\n\n                        container\n                        spacing={4}\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        direction=\"row-reverse\">\n                        <Grid container item sm={12} md={6}>\n                            <h3><a href=\"https://gitlab.com/DesantBucie/paleofetch-mac\">Paleofetch</a></h3>\n                            <p>\n                                is a fork of a copy of neofetch written in C. Currently works only on mac, I'll try to bring it on the BSDs and Solaris family. It is on macOS even <strong>20 times faster</strong> than neofetch. Most of code is new.\n                            </p>\n                        </Grid>\n                        <Grid container item sm={12} md={6}>\n                            <div className=\"my-projects__image\"><img src={paleofetch} alt=\"paleofetch\" /></div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className=\"my-projects__project\">\n                    <Grid\n\n                        container\n                        spacing={4}\n                        justifyContent=\"center\"\n                        alignItems=\"center\">\n                        <Grid container item sm={12} md={6}>\n                            <h3><a href=\"https://github.com/DesantBucie/easy-vim\">Easy-Vim</a></h3>\n                            <p>\n                                is currently just a prototype and concept of what I would like achieve, that is, easy to set and use vim completion almost or completly without additional dependecies. If you want something already working then use <a href=\"https://github.com/DesantBucie/Verde\">Verde</a> (It works very well with macvim.) or <a href=\"https://github.com/DesantBucie/exrc\">Exrc</a> for vi.\n                            </p>\n                        </Grid>\n                        <Grid container item sm={12} md={6}>\n                            <div className=\"my-projects__image\"><img src={easy_vim} alt=\"EasyVim\" /></div>\n                        </Grid>\n                    </Grid>\n                </div>\n                <div className=\"my-projects__project\">\n                    <Grid\n\n                        container\n                        spacing={4}\n                        justifyContent=\"center\"\n                        alignItems=\"center\"\n                        direction=\"row-reverse\">\n                        <Grid container item sm={12} md={6}>\n                            <h3><a href=\"https://github.com/DesantBucie/aquila\">Aquila</a></h3>\n                            <p>\n                                is old learning project, that is quite abandoned that I'm sure has many mistakes, and outdates, but it's example of me working with data from api.\n                            </p>\n                        </Grid>\n                        <Grid container item sm={12} md={6}>\n                            <div className=\"my-projects__image\"><img src={antila} alt=\"antila\" /></div>\n                        </Grid>\n\n                    </Grid>\n                </div>\n            </section>\n        </div>\n    );\n}\nexport default MyProjects;","import './Contact.scss';\n\nconst Contact = () => {\n    return (\n        <div>\n            <div className=\"contact__triangle\">\n                <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                    <path d=\"M1200 0L0 0 892.25 114.72 1200 0z\" className=\"contact__shape-fill\"></path>\n                </svg>\n            </div>\n            <section className=\"contact\" id=\"contact\">\n                <div className=\"my-projects__project my-projects__project--contact\">\n                    <h2>Contact</h2>\n                    <section className=\"contact__container\">\n                        <h3>Mail Me! <a href=\"mailto: mattrusz@gmail.com\">mattrusz@gmail.com</a></h3>\n                        <h3>Or <a href=\"https://github.com/DesantBucie/DesantBucie/issues\">Make an issue</a> in my github repo</h3>\n                    </section>\n                </div>\n\n            </section>\n            <div className=\"contact__triangle contact__triangle--bottom\">\n                <svg data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\">\n                    <path d=\"M1200 0L0 0 892.25 114.72 1200 0z\" className=\"contact__shape-fill\"></path>\n                </svg>\n            </div>\n        </div>\n    );\n}\nexport default Contact;","import './App.scss';\nimport Header from './components/Header';\nimport AboutMe from './components/AboutMe';\nimport MyProjects from'./components/MyProjects';\nimport Contact from './components/Contact';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      \t<Header />\n      \t<main>\n        \t<AboutMe />\n        \t<MyProjects />\n        \t<Contact />\n      \t</main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst Apollo = <React.StrictMode><App /></React.StrictMode>\nReactDOM.render(\n  \n  Apollo,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}